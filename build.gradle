buildscript {
    ext {
        springBootVersion = '2.7.4'

    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" } // plugin 저장소
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


tasks.withType(JavaCompile) {
    options.release = 11
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.vladmihalcea:hibernate-types-52:2.20.0'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.projectlombok:lombok'

    implementation 'com.slack.api:slack-api-client:1.27.3'
    //implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${p6spyVersion}"

    // spring-boot-starter-data-jpa 2.X.X 버전 사용시
    implementation("com.vladmihalcea:hibernate-types-55:2.20.0")

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation 'org.apache.commons:commons-collections4:4.4'

    // Start Of QueryDSL
    // Querydsl + JPA 라이브러리
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    // SQLQueryFactory 를 사용하기 위해서 추가함.
    implementation "com.querydsl:querydsl-sql:${queryDslVersion}"

    annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion"
    annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    // End Of Querydsl Dependencies ##########################################################

    // logback - json
    implementation "ch.qos.logback.contrib:logback-jackson:0.1.5"
    implementation "ch.qos.logback.contrib:logback-json-classic:0.1.5"

    // testcontainers
//    testImplementation "org.testcontainers:testcontainers:1.17.5"

//    testImplementation "org.testcontainers:mysql:1.17.5"
//    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
//    testImplementation 'org.testcontainers:junit-jupiter:1.17.5'


//    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.19.0"
    }
}

test {
    useJUnitPlatform()
}

// QueryDSL
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated/sources/annotationProcessor/java/main"]
        }
    }
}

